$date
	Fri Sep 06 19:11:02 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module Processor_tb $end
$var wire 8 ! ALU_out [7:0] $end
$var wire 8 " psw_out [7:0] $end
$var wire 8 # mem_read_data [7:0] $end
$var wire 1 $ interrupt_ack $end
$var reg 1 % clk $end
$var reg 8 & instruction [7:0] $end
$var reg 4 ' irq [3:0] $end
$var reg 1 ( reset $end
$scope module uut $end
$var wire 8 ) ALU_out [7:0] $end
$var wire 1 * aux_carry_flag $end
$var wire 1 % clk $end
$var wire 8 + instruction [7:0] $end
$var wire 4 , irq [3:0] $end
$var wire 1 - read_data $end
$var wire 1 ( reset $end
$var wire 8 . vector_address [7:0] $end
$var wire 1 / set_interrupt $end
$var wire 1 0 reg_write_enable $end
$var wire 2 1 reg_write_addr [1:0] $end
$var wire 2 2 reg_read_addr2 [1:0] $end
$var wire 2 3 reg_read_addr1 [1:0] $end
$var wire 8 4 reg_data2 [7:0] $end
$var wire 8 5 reg_data1 [7:0] $end
$var wire 8 6 psw_out [7:0] $end
$var wire 1 7 overflow_out $end
$var wire 1 8 mem_write $end
$var wire 8 9 mem_read_data [7:0] $end
$var wire 1 : mem_read $end
$var wire 1 $ interrupt_ack $end
$var wire 1 ; clear_interrupt $end
$var wire 1 < carry_out $end
$var wire 8 = alu_result [7:0] $end
$var wire 4 > alu_opcode [3:0] $end
$scope module alu $end
$var wire 1 % clk $end
$var wire 1 ( reset $end
$var wire 8 ? b [7:0] $end
$var wire 4 @ alu_opcode [3:0] $end
$var wire 8 A a [7:0] $end
$var reg 8 B ALU_out [7:0] $end
$var reg 1 < Carry_out $end
$var reg 1 7 Overflow_out $end
$upscope $end
$scope module control_unit $end
$var wire 1 % clk $end
$var wire 8 C instruction [7:0] $end
$var wire 1 - read_data $end
$var wire 1 ( reset $end
$var wire 1 $ interrupt_ack $end
$var parameter 2 D DECODE $end
$var parameter 2 E EXECUTE $end
$var parameter 2 F FETCH $end
$var parameter 2 G INTERRUPT $end
$var reg 4 H alu_opcode [3:0] $end
$var reg 1 ; clear_interrupt $end
$var reg 1 : mem_read $end
$var reg 1 8 mem_write $end
$var reg 2 I reg_read_addr1 [1:0] $end
$var reg 2 J reg_read_addr2 [1:0] $end
$var reg 2 K reg_write_addr [1:0] $end
$var reg 1 0 reg_write_enable $end
$var reg 1 / set_interrupt $end
$var reg 2 L state [1:0] $end
$upscope $end
$scope module interrupt_controller $end
$var wire 1 % clk $end
$var wire 1 M interrupt_enable $end
$var wire 4 N irq [3:0] $end
$var wire 1 ( reset $end
$var parameter 8 O VECTOR_IRQ0 $end
$var parameter 8 P VECTOR_IRQ1 $end
$var parameter 8 Q VECTOR_IRQ2 $end
$var parameter 8 R VECTOR_IRQ3 $end
$var reg 1 $ interrupt_ack $end
$var reg 8 S vector_address [7:0] $end
$upscope $end
$scope module memory_bank $end
$var wire 1 % clk $end
$var wire 1 : mem_read $end
$var wire 1 8 mem_write $end
$var wire 1 ( reset $end
$var wire 8 T write_data [7:0] $end
$var wire 8 U address [7:0] $end
$var reg 8 V read_data [7:0] $end
$upscope $end
$scope module psw $end
$var wire 1 * aux_carry_flag $end
$var wire 1 < carry_flag $end
$var wire 1 ; clear_interrupt $end
$var wire 1 % clk $end
$var wire 1 / interrupt_enable $end
$var wire 1 7 overflow_flag $end
$var wire 1 ( reset $end
$var wire 1 / set_interrupt $end
$var wire 1 W sign_flag $end
$var wire 1 X zero_flag $end
$var reg 8 Y psw [7:0] $end
$upscope $end
$scope module register_bank $end
$var wire 1 % clk $end
$var wire 2 Z read_reg1 [1:0] $end
$var wire 2 [ read_reg2 [1:0] $end
$var wire 1 ( reset $end
$var wire 8 \ write_data [7:0] $end
$var wire 1 0 write_enable $end
$var wire 2 ] write_reg [1:0] $end
$var reg 8 ^ R0 [7:0] $end
$var reg 8 _ R1 [7:0] $end
$var reg 8 ` R2 [7:0] $end
$var reg 8 a R3 [7:0] $end
$var reg 8 b read_data1 [7:0] $end
$var reg 8 c read_data2 [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000000 R
b110000 Q
b100000 P
b10000 O
b11 G
b0 F
b10 E
b1 D
$end
#0
$dumpvars
bx c
bx b
bx a
bx `
bx _
bx ^
b0 ]
bx \
b0 [
b0 Z
b0 Y
xX
xW
b0 V
bx U
bx T
b0 S
b0 N
0M
b0 L
b0 K
b0 J
b0 I
b0 H
b0 C
bx B
bx A
b0 @
bx ?
b0 >
bx =
x<
0;
0:
b0 9
08
x7
b0 6
bx 5
bx 4
b0 3
b0 2
b0 1
00
0/
b0 .
z-
b0 ,
b0 +
z*
bz )
1(
b0 '
b0 &
0%
0$
b0 #
b0 "
bz !
$end
#5
1%
#10
0%
b100 &
b100 +
b100 C
0(
#15
bx #
bx 9
bx V
b0xxz0xx "
b0xxz0xx 6
b0xxz0xx Y
b1 L
1:
1%
#20
0%
#25
b0 #
b0 9
b0 V
b10 L
10
b1 1
b1 K
b1 ]
b1 3
b1 I
b1 Z
0:
1%
#30
0%
b11010 &
b11010 +
b11010 C
#35
b100 5
b100 A
b100 U
b100 b
b0 L
00
b1 >
b1 @
b1 H
b100 _
1%
#40
0%
#45
bx #
bx 9
bx V
b1 L
1:
1%
#50
0%
b100100 &
b100100 +
b100100 C
#55
0W
07
b0x00 =
b0x00 B
b0x00 \
b0 #
b0 9
b0 V
b10 L
10
b10 >
b10 @
b10 H
0:
1%
#60
0%
#65
b0 L
00
b0xz0x0 "
b0xz0x0 6
b0xz0x0 Y
1%
#70
0%
b111010 &
b111010 +
b111010 C
#75
bx #
bx 9
bx V
b1 L
1:
1%
#80
0%
#85
xW
bx 5
bx A
bx U
bx b
xX
bx =
bx B
bx \
b0 #
b0 9
b0 V
b10 L
10
b10 1
b10 K
b10 ]
b10 2
b10 J
b10 [
b10 3
b10 I
b10 Z
b11 >
b11 @
b11 H
0:
1%
#90
0%
b1000100 &
b1000100 +
b1000100 C
#95
0W
1X
b0 =
b0 B
b0 \
b11010 4
b11010 ?
b11010 T
b11010 c
b11010 5
b11010 A
b11010 U
b11010 b
b0xz0xx "
b0xz0xx 6
b0xz0xx Y
b0 L
00
b100 >
b100 @
b100 H
b11010 `
1%
#100
0%
#105
bx #
bx 9
bx V
b1 L
1:
b0xz010 "
b0xz010 6
b0xz010 Y
1%
#110
0%
b1010000 &
b1010000 +
b1010000 C
#115
xW
bx 5
bx A
bx U
bx b
xX
bx =
bx B
bx \
b0 #
b0 9
b0 V
b10 L
10
b0 1
b0 K
b0 ]
b0 3
b0 I
b0 Z
b101 >
b101 @
b101 H
0:
1%
#120
0%
#125
1W
0X
b11111111 =
b11111111 B
b11111111 \
b0 5
b0 A
b0 U
b0 b
b0 L
00
b0xz0xx "
b0xz0xx 6
b0xz0xx Y
b0 ^
1%
#130
0%
b1100100 &
b1100100 +
b1100100 C
#135
bx #
bx 9
bx V
b0xz001 "
b0xz001 6
b0xz001 Y
b1 L
1:
1%
#140
0%
#145
0W
b100 5
b100 A
b100 U
b100 b
0X
b1000 =
b1000 B
b1000 \
b0 #
b0 9
b0 V
b10 L
10
b1 1
b1 K
b1 ]
b1 3
b1 I
b1 Z
b110 >
b110 @
b110 H
0:
1%
#150
0%
b1111000 &
b1111000 +
b1111000 C
#155
b10 =
b10 B
b10 \
b0xz000 "
b0xz000 6
b0xz000 Y
b0 L
00
b111 >
b111 @
b111 H
1%
#160
0%
#165
bx #
bx 9
bx V
b1 L
1:
1%
#170
0%
b1 '
b1 ,
b1 N
#175
b1101 =
b1101 B
b1101 \
b11010 5
b11010 A
b11010 U
b11010 b
b0 #
b0 9
b0 V
b10 L
10
b10 1
b10 K
b10 ]
b10 3
b10 I
b10 Z
0:
1%
#180
0%
#185
b0 L
00
1%
#190
0%
